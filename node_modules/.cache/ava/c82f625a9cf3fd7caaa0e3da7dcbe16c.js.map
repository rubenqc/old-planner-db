{"version":3,"sources":["tests/type-test.js"],"names":[],"mappings":"AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourceRoot":"/var/www/html/planner-db","sourcesContent":["// 'use strict'\n\n// const test = require('ava')\n// const sinon = require('sinon')\n// const proxyquire = require('proxyquire')\n\n// let config = {\n//     logging: function () {}\n// }\n\n// let db = null \n// let sandbox = null\n// let TypeStub = null\n\n// // general\n// let DateStub = {\n//     belongsTo: sinon.spy(),\n//     hasMany: sinon.spy()\n//   }\n//   let ClassStub = {\n//     hasMany: sinon.spy()\n//   }\n//   let RegionStub = {\n//     belongsTo: sinon.spy(),\n//     hasMany: sinon.spy()\n//   }\n//   let DatacenterStub = {\n//     belongsTo: sinon.spy(),\n//     hasMany: sinon.spy()\n//   }\n//   let DatacenterMainStub = {\n//     hasMany: sinon.spy()\n//   }\n  \n//   let UsersStub = {\n//     belongsTo: sinon.spy()\n//   }\n//   let TrafficStub = {\n//     belongsTo: sinon.spy()\n//   }\n//   let GbStub = {\n//     belongsTo: sinon.spy()\n//   }\n//   let CentralizedAnalysisStub = {\n//     belongsTo: sinon.spy()\n//   }\n  \n//   // core-ps\n//   let PdpStub = {\n//     belongsTo: sinon.spy()\n//   }\n//   let SauStub = {\n//     belongsTo: sinon.spy()\n//   }\n//   let ThStub = {\n//     belongsTo: sinon.spy()\n//   }\n  \n//   // u2000\n//   let UthStub = {\n//     belongsTo: sinon.spy()\n//   }\n//   let UpdpStub = {\n//     belongsTo: sinon.spy()\n//   }\n//   let UsauStub = {\n//     belongsTo: sinon.spy()\n//   }\n  \n//   // ratios\n//   let PdpSauStub = {\n//     belongsTo: sinon.spy()\n//   }\n//   let SauUsersStub = {\n//     belongsTo: sinon.spy()\n//   }\n//   let ThfcSauStub = {\n//     belongsTo: sinon.spy()\n//   }\n//   let ThfcPdpStub = {\n//     belongsTo: sinon.spy()\n//   }"]}
{"version":3,"sources":["tests/datacenter-tests.js"],"names":["test","require","sinon","proxyquire","config","logging","db","sandbox","DatacenterMainStub","DatacenterStub","DateStub","hasMany","spy","TypeStub","belongsTo","ClassStub","RegionStub","UsersStub","TrafficStub","GbStub","CentralizedAnalysisStub","PdpStub","SauStub","ThStub","UthStub","UpdpStub","UsauStub","PdpSauStub","SauUsersStub","ThfcSauStub","ThfcPdpStub","beforeEach","createSandbox","setupDatabase","afterEach","restore","t","truthy","Datacenter"],"mappings":"AAAA;;;;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,KAAD,CAApB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACA,MAAME,UAAU,GAAGF,OAAO,CAAC,YAAD,CAA1B;;AAEA,IAAIG,MAAM,GAAG;AACXC,EAAAA,OAAO,EAAE,YAAY,CAAE;AADZ,CAAb;AAIA,IAAIC,EAAE,GAAG,IAAT;AACA,IAAIC,OAAO,GAAG,IAAd;AACA,IAAIC,kBAAkB,GAAG,IAAzB;AACA,IAAIC,cAAc,GAAG,IAArB,C,CAEA;;AACA,IAAIC,QAAQ,GAAG;AACbC,EAAAA,OAAO,EAAET,KAAK,CAACU,GAAN;AADI,CAAf;AAGA,IAAIC,QAAQ,GAAG;AACbC,EAAAA,SAAS,EAAEZ,KAAK,CAACU,GAAN,EADE;AAEbD,EAAAA,OAAO,EAAET,KAAK,CAACU,GAAN;AAFI,CAAf;AAIA,IAAIG,SAAS,GAAG;AACdJ,EAAAA,OAAO,EAAET,KAAK,CAACU,GAAN;AADK,CAAhB;AAGA,IAAII,UAAU,GAAG;AACfF,EAAAA,SAAS,EAAEZ,KAAK,CAACU,GAAN,EADI;AAEfD,EAAAA,OAAO,EAAET,KAAK,CAACU,GAAN;AAFM,CAAjB;AAKA,IAAIK,SAAS,GAAG;AACdH,EAAAA,SAAS,EAAEZ,KAAK,CAACU,GAAN;AADG,CAAhB;AAGA,IAAIM,WAAW,GAAG;AAChBJ,EAAAA,SAAS,EAAEZ,KAAK,CAACU,GAAN;AADK,CAAlB;AAGA,IAAIO,MAAM,GAAG;AACXL,EAAAA,SAAS,EAAEZ,KAAK,CAACU,GAAN;AADA,CAAb;AAGA,IAAIQ,uBAAuB,GAAG;AAC5BN,EAAAA,SAAS,EAAEZ,KAAK,CAACU,GAAN,EADiB,CAI9B;;AAJ8B,CAA9B;AAKA,IAAIS,OAAO,GAAG;AACZP,EAAAA,SAAS,EAAEZ,KAAK,CAACU,GAAN;AADC,CAAd;AAGA,IAAIU,OAAO,GAAG;AACZR,EAAAA,SAAS,EAAEZ,KAAK,CAACU,GAAN;AADC,CAAd;AAGA,IAAIW,MAAM,GAAG;AACXT,EAAAA,SAAS,EAAEZ,KAAK,CAACU,GAAN,EADA,CAIb;;AAJa,CAAb;AAKA,IAAIY,OAAO,GAAG;AACZV,EAAAA,SAAS,EAAEZ,KAAK,CAACU,GAAN;AADC,CAAd;AAGA,IAAIa,QAAQ,GAAG;AACbX,EAAAA,SAAS,EAAEZ,KAAK,CAACU,GAAN;AADE,CAAf;AAGA,IAAIc,QAAQ,GAAG;AACbZ,EAAAA,SAAS,EAAEZ,KAAK,CAACU,GAAN,EADE,CAIf;;AAJe,CAAf;AAKA,IAAIe,UAAU,GAAG;AACfb,EAAAA,SAAS,EAAEZ,KAAK,CAACU,GAAN;AADI,CAAjB;AAGA,IAAIgB,YAAY,GAAG;AACjBd,EAAAA,SAAS,EAAEZ,KAAK,CAACU,GAAN;AADM,CAAnB;AAGA,IAAIiB,WAAW,GAAG;AAChBf,EAAAA,SAAS,EAAEZ,KAAK,CAACU,GAAN;AADK,CAAlB;AAGA,IAAIkB,WAAW,GAAG;AAChBhB,EAAAA,SAAS,EAAEZ,KAAK,CAACU,GAAN;AADK,CAAlB;AAIAZ,IAAI,CAAC+B,UAAL,CAAgB,YAAY;AAC1BxB,EAAAA,OAAO,GAAGL,KAAK,CAAC8B,aAAN,EAAV;AACAvB,EAAAA,cAAc,GAAG;AACfE,IAAAA,OAAO,EAAEJ,OAAO,CAACK,GAAR,EADM;AAEfE,IAAAA,SAAS,EAAEP,OAAO,CAACK,GAAR;AAFI,GAAjB;AAIAJ,EAAAA,kBAAkB,GAAG;AACnBG,IAAAA,OAAO,EAAEJ,OAAO,CAACK,GAAR;AADU,GAArB;AAIA,QAAMqB,aAAa,GAAG9B,UAAU,CAAC,KAAD,EAAQ;AACtC,8BAA0B,MAAMc,SADM;AAEtC,gCAA4B,MAAMC,WAFI;AAGtC,2BAAuB,MAAMC,MAHS;AAItC,6CAAyC,MAAMC,uBAJT;AAMtC,6BAAyB,MAAMV,QANO;AAOtC,6BAAyB,MAAMG,QAPO;AAQtC,8BAA0B,MAAME,SARM;AAStC,+BAA2B,MAAMC,UATK;AAUtC,mCAA+B,MAAMP,cAVC;AAWtC,wCAAoC,MAAMD,kBAXJ;AAatC,4BAAwB,MAAMa,OAbQ;AActC,4BAAwB,MAAMC,OAdQ;AAetC,2BAAuB,MAAMC,MAfS;AAiBtC,yBAAqB,MAAMC,OAjBW;AAkBtC,0BAAsB,MAAMC,QAlBU;AAmBtC,0BAAsB,MAAMC,QAnBU;AAqBtC,gCAA4B,MAAMC,UArBI;AAsBtC,iCAA6B,MAAMC,YAtBG;AAuBtC,gCAA4B,MAAMC,WAvBI;AAwBtC,gCAA4B,MAAMC;AAxBI,GAAR,CAAhC;AA2BAxB,EAAAA,EAAE,GAAG,MAAM2B,aAAa,CAAC7B,MAAD,CAAxB;AACD,CAtCD;AAwCAJ,IAAI,CAACkC,SAAL,CAAe,MAAM;AACnB3B,EAAAA,OAAO,IAAIA,OAAO,CAAC4B,OAAR,EAAX;AACD,CAFD;AAIAnC,IAAI,CAAC,YAAD,EAAeoC,CAAC,IAAI;AAAA;;AACtBA,EAAAA,CAAC,CAACC,MAAF,uBAAS,WAAA/B,EAAE,uBAAF,CAAGgC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAwB,2BAAxB;AACD,CAFG,CAAJ","sourceRoot":"/var/www/html/planner-db","sourcesContent":["'use strict'\n\nconst test = require('ava')\nconst sinon = require('sinon')\nconst proxyquire = require('proxyquire')\n\nlet config = {\n  logging: function () {}\n}\n\nlet db = null\nlet sandbox = null\nlet DatacenterMainStub = null\nlet DatacenterStub = null\n\n// general\nlet DateStub = {\n  hasMany: sinon.spy()\n}\nlet TypeStub = {\n  belongsTo: sinon.spy(),\n  hasMany: sinon.spy()\n}\nlet ClassStub = {\n  hasMany: sinon.spy()\n}\nlet RegionStub = {\n  belongsTo: sinon.spy(),\n  hasMany: sinon.spy()\n}\n\nlet UsersStub = {\n  belongsTo: sinon.spy()\n}\nlet TrafficStub = {\n  belongsTo: sinon.spy()\n}\nlet GbStub = {\n  belongsTo: sinon.spy()\n}\nlet CentralizedAnalysisStub = {\n  belongsTo: sinon.spy()\n}\n\n// core-ps\nlet PdpStub = {\n  belongsTo: sinon.spy()\n}\nlet SauStub = {\n  belongsTo: sinon.spy()\n}\nlet ThStub = {\n  belongsTo: sinon.spy()\n}\n\n// u2000\nlet UthStub = {\n  belongsTo: sinon.spy()\n}\nlet UpdpStub = {\n  belongsTo: sinon.spy()\n}\nlet UsauStub = {\n  belongsTo: sinon.spy()\n}\n\n// ratios\nlet PdpSauStub = {\n  belongsTo: sinon.spy()\n}\nlet SauUsersStub = {\n  belongsTo: sinon.spy()\n}\nlet ThfcSauStub = {\n  belongsTo: sinon.spy()\n}\nlet ThfcPdpStub = {\n  belongsTo: sinon.spy()\n}\n\ntest.beforeEach(async () => {\n  sandbox = sinon.createSandbox()\n  DatacenterStub = {\n    hasMany: sandbox.spy(),\n    belongsTo: sandbox.spy()\n  }\n  DatacenterMainStub = {\n    hasMany: sandbox.spy()\n  }\n\n  const setupDatabase = proxyquire('../', {\n    './models/general/users': () => UsersStub,\n    './models/general/traffic': () => TrafficStub,\n    './models/general/gb': () => GbStub,\n    './models/general/centralized_analysis': () => CentralizedAnalysisStub,\n\n    './models/general/date': () => DateStub,\n    './models/general/type': () => TypeStub,\n    './models/general/class': () => ClassStub,\n    './models/general/region': () => RegionStub,\n    './models/general/datacenter': () => DatacenterStub,\n    './models/general/datacenter_main': () => DatacenterMainStub,\n\n    './models/core-ps/pdp': () => PdpStub,\n    './models/core-ps/sau': () => SauStub,\n    './models/core-ps/th': () => ThStub,\n\n    './models/u2000/th': () => UthStub,\n    './models/u2000/pdp': () => UpdpStub,\n    './models/u2000/sau': () => UsauStub,\n\n    './models/ratios/pdp_ sau': () => PdpSauStub,\n    './models/ratios/sau_users': () => SauUsersStub,\n    './models/ratios/thfc_sau': () => ThfcSauStub,\n    './models/ratios/thfc_pdp': () => ThfcPdpStub\n  })\n\n  db = await setupDatabase(config)\n})\n\ntest.afterEach(() => {\n  sandbox && sandbox.restore()\n})\n\ntest('Datacenter', t => {\n  t.truthy(db.Datacenter, 'Type service should exist')\n})\n"]}
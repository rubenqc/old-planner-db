'use strict';var cov_1i97i7qki5=function(){var path="/var/www/html/planner-db/lib/general/traffic.js",hash="6ff28705c6714d15185b2f893e606822d5020032",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/var/www/html/planner-db/lib/general/traffic.js",statementMap:{"0":{start:{line:3,column:18},end:{line:3,column:38}},"1":{start:{line:4,column:11},end:{line:4,column:23}},"2":{start:{line:6,column:0},end:{line:110,column:1}}},fnMap:{"0":{name:"setupTraffic",decl:{start:{line:6,column:26},end:{line:6,column:38}},loc:{start:{line:6,column:89},end:{line:110,column:1}},line:6}},branchMap:{},s:{"0":0,"1":0,"2":0},f:{"0":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const Sequelize=(cov_1i97i7qki5.s[0]++,require('sequelize'));const Op=(cov_1i97i7qki5.s[1]++,Sequelize.Op);cov_1i97i7qki5.s[2]++;module.exports=function setupTraffic(TrafficModel,DateModel,TypeModel,RegionModel){// async function createOrUpdate (traffic, dateA, type, regionA) {
//   const fecha = await DateModel.findOne({
//     where: { fecha: dateA }
//   })
//   if (!fecha) {
//     return 1
//   }
//   const tipo = await TypeModel.findOne({
//     where: { tipo: type }
//   })
//   if (!tipo) {
//     return 2
//   }
//   const region = await RegionModel.findOne({
//     where: { region: regionA }
//   })
//   if (!region) {
//     return 3
//   }
//   Object.assign(traffic, { fechaId: fecha.id, tipoId: tipo.id, regionId: region.id })
//   const cond = {
//     where: {
//       fechaId: traffic.fechaId,
//       tipoId: traffic.tipoId,
//       regionId: traffic.regionId,
//       estado: traffic.estado
//     }
//   }
//   const existingTraffic = await TrafficModel.findOne(cond)
//   if (existingTraffic) {
//     const updated = await TrafficModel.update(traffic, cond)
//     return updated ? TrafficModel.findOne(cond) : existingTraffic
//   }
//   const result = await TrafficModel.create(traffic)
//   return result.toJSON()
// }
// function findAll () {
//   return TrafficModel.findAll({
//     attributes: ['id', 'trafico', 'estado'],
//     group: ['id'],
//     include: [
//       {
//         attributes: ['fecha'],
//         model: DateModel
//       },
//       {
//         attributes: ['tipo'],
//         model: TypeModel
//       },
//       {
//         attributes: ['region'],
//         model: RegionModel
//       }
//     ],
//     raw: true
//   })
// }
// async function findByRange (startDate, finalDate, tipo, estado) {
//   return TrafficModel.findAll({
//     attributes: ['trafico'],
//     where: {
//       estado
//     },
//     include: [
//       {
//         attributes: ['fecha'],
//         model: DateModel,
//         where: {
//           fecha: {
//             [Op.and]: {
//               [Op.gte]: startDate,
//               [Op.lte]: finalDate
//             }
//           }
//         }
//       },
//       {
//         attributes: ['tipo'],
//         model: TypeModel,
//         where: {
//           tipo
//         }
//       }
//     ],
//     raw: true
//   })
// }
// return {
//   createOrUpdate,
//   findAll,
//   findByRange
// }
cov_1i97i7qki5.f[0]++;};
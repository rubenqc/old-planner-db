'use strict';var cov_1eol4oly0k=function(){var path="/var/www/html/planner-db/index.js",hash="df89b48aca4d89d05056a72e2bc5544313189d1e",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/var/www/html/planner-db/index.js",statementMap:{"0":{start:{line:3,column:22},end:{line:3,column:41}},"1":{start:{line:4,column:24},end:{line:4,column:49}},"2":{start:{line:5,column:25},end:{line:5,column:51}},"3":{start:{line:6,column:19},end:{line:6,column:41}},"4":{start:{line:7,column:20},end:{line:7,column:43}},"5":{start:{line:8,column:17},end:{line:8,column:36}},"6":{start:{line:10,column:0},end:{line:44,column:1}},"7":{start:{line:11,column:2},end:{line:22,column:4}},"8":{start:{line:24,column:20},end:{line:24,column:41}},"9":{start:{line:25,column:21},end:{line:25,column:44}},"10":{start:{line:26,column:22},end:{line:26,column:46}},"11":{start:{line:28,column:2},end:{line:28,column:33}},"12":{start:{line:29,column:2},end:{line:29,column:35}},"13":{start:{line:31,column:2},end:{line:31,column:32}},"14":{start:{line:33,column:2},end:{line:35,column:3}},"15":{start:{line:34,column:4},end:{line:34,column:41}},"16":{start:{line:37,column:16},end:{line:37,column:38}},"17":{start:{line:38,column:17},end:{line:38,column:53}},"18":{start:{line:40,column:2},end:{line:43,column:3}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:10,column:17},end:{line:10,column:18}},loc:{start:{line:10,column:41},end:{line:44,column:1}},line:10}},branchMap:{"0":{loc:{start:{line:33,column:2},end:{line:35,column:3}},type:"if",locations:[{start:{line:33,column:2},end:{line:35,column:3}},{start:{line:33,column:2},end:{line:35,column:3}}],line:33}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const setupDatabase=(cov_1eol4oly0k.s[0]++,require('./lib/db'));const setupAgentModel=(cov_1eol4oly0k.s[1]++,require('./models/agent'));const setupMetricModel=(cov_1eol4oly0k.s[2]++,require('./models/metric'));const setupAgent=(cov_1eol4oly0k.s[3]++,require('./lib/agent'));const setupMetric=(cov_1eol4oly0k.s[4]++,require('./lib/metric'));const defaults=(cov_1eol4oly0k.s[5]++,require('defaults'));cov_1eol4oly0k.s[6]++;module.exports=async function(config){cov_1eol4oly0k.f[0]++;cov_1eol4oly0k.s[7]++;config=defaults(config,{dialect:'sqlite',pool:{max:10,min:0,idle:10000},query:{raw:true},operatorsAliases:false});const sequelize=(cov_1eol4oly0k.s[8]++,setupDatabase(config));const AgentModel=(cov_1eol4oly0k.s[9]++,setupAgentModel(config));const MetricModel=(cov_1eol4oly0k.s[10]++,setupMetricModel(config));cov_1eol4oly0k.s[11]++;AgentModel.hasMany(MetricModel);cov_1eol4oly0k.s[12]++;MetricModel.belongsTo(AgentModel);cov_1eol4oly0k.s[13]++;await sequelize.authenticate();cov_1eol4oly0k.s[14]++;if(config.setup){cov_1eol4oly0k.b[0][0]++;cov_1eol4oly0k.s[15]++;await sequelize.sync({force:true});}else{cov_1eol4oly0k.b[0][1]++;}const Agent=(cov_1eol4oly0k.s[16]++,setupAgent(AgentModel));const Metric=(cov_1eol4oly0k.s[17]++,setupMetric(MetricModel,AgentModel));cov_1eol4oly0k.s[18]++;return{Agent,Metric};};
'use strict';var cov_bz7tstty1=function(){var path="/var/www/html/planner-db/lib/general/users.js",hash="1c9adaf7123b4e76f917d864d996c252f836b597",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/var/www/html/planner-db/lib/general/users.js",statementMap:{"0":{start:{line:3,column:0},end:{line:28,column:1}},"1":{start:{line:5,column:23},end:{line:7,column:6}},"2":{start:{line:9,column:4},end:{line:25,column:5}},"3":{start:{line:10,column:6},end:{line:10,column:49}},"4":{start:{line:11,column:19},end:{line:15,column:7}},"5":{start:{line:16,column:29},end:{line:16,column:60}},"6":{start:{line:18,column:6},end:{line:21,column:7}},"7":{start:{line:19,column:24},end:{line:19,column:62}},"8":{start:{line:20,column:8},end:{line:20,column:67}},"9":{start:{line:23,column:21},end:{line:23,column:53}},"10":{start:{line:24,column:6},end:{line:24,column:28}},"11":{start:{line:26,column:4},end:{line:26,column:21}}},fnMap:{"0":{name:"setupUsers",decl:{start:{line:3,column:26},end:{line:3,column:36}},loc:{start:{line:3,column:61},end:{line:28,column:1}},line:3},"1":{name:"createOrUpdate",decl:{start:{line:4,column:17},end:{line:4,column:31}},loc:{start:{line:4,column:55},end:{line:27,column:3}},line:4}},branchMap:{"0":{loc:{start:{line:9,column:4},end:{line:25,column:5}},type:"if",locations:[{start:{line:9,column:4},end:{line:25,column:5}},{start:{line:9,column:4},end:{line:25,column:5}}],line:9},"1":{loc:{start:{line:18,column:6},end:{line:21,column:7}},type:"if",locations:[{start:{line:18,column:6},end:{line:21,column:7}},{start:{line:18,column:6},end:{line:21,column:7}}],line:18},"2":{loc:{start:{line:20,column:15},end:{line:20,column:67}},type:"cond-expr",locations:[{start:{line:20,column:25},end:{line:20,column:50}},{start:{line:20,column:53},end:{line:20,column:67}}],line:20}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_bz7tstty1.s[0]++;module.exports=function setupUsers(UsersModel,DateModel){cov_bz7tstty1.f[0]++;async function createOrUpdate(region,datacenterId){cov_bz7tstty1.f[1]++;const datacenter=(cov_bz7tstty1.s[1]++,await DatacenterModel.findOne({where:{datacenter:datacenterId}}));cov_bz7tstty1.s[2]++;if(datacenter){cov_bz7tstty1.b[0][0]++;cov_bz7tstty1.s[3]++;Object.assign(datacenter,{datacenterId});const cond=(cov_bz7tstty1.s[4]++,{where:{region:region.region}});const existingRegion=(cov_bz7tstty1.s[5]++,await RegionModel.findOne(cond));cov_bz7tstty1.s[6]++;if(existingRegion){cov_bz7tstty1.b[1][0]++;const updated=(cov_bz7tstty1.s[7]++,await RegionModel.update(region,cond));cov_bz7tstty1.s[8]++;return updated?(cov_bz7tstty1.b[2][0]++,RegionModel.findOne(cond)):(cov_bz7tstty1.b[2][1]++,existingRegion);}else{cov_bz7tstty1.b[1][1]++;}const result=(cov_bz7tstty1.s[9]++,await RegionModel.create(region));cov_bz7tstty1.s[10]++;return result.toJSON();}else{cov_bz7tstty1.b[0][1]++;}cov_bz7tstty1.s[11]++;return datacenter;}};